local MOVE_BUTTON = "move/button/base"
local BUILD_BUTTON = "build/button/base"
local BACK_BUTTON = "back/button/base"
local ACTION_BUTTON_Y_STEP = -200
local BUILD_BUTTON_X_STEP = 300
local END_TURN_BUTTON = "end_turn/base"
local BUILD_FIELD = "build_box"
local BUILD_FARM_BUTTON = "farm/button/base"
local BUILD_SAWMILL_BUTTON = "sawmill/button/base"

local function clear_gui(self)
	for message_id, button in pairs(self.active_buttons) do
		gui.set_enabled(button, false)
		self.active_buttons[message_id] = nil
	end
	gui.set_enabled(gui.get_node(BUILD_FIELD), false)
end

local function render_button(self, button_url, message_id)
	local button = gui.get_node(button_url)
	self.active_buttons[message_id] = button
	gui.set_enabled(button, true)
end

local function render_action(self, options)
	local x = 0
	local y = 0
	if options.move ~= nil then
		render_button(self, MOVE_BUTTON, options.move)
		gui.set_position(self.active_buttons[options.move], vmath.vector3(x, y, 0))
		y = y + ACTION_BUTTON_Y_STEP
	end
	if options.build ~= nil then
		render_button(self, BUILD_BUTTON, options.build)
		gui.set_position(self.active_buttons[options.build], vmath.vector3(x, y, 0))
		y = y + ACTION_BUTTON_Y_STEP
	end
	if options.back ~= nil then
		render_button(self, BACK_BUTTON, options.back)
		gui.set_position(self.active_buttons[options.back], vmath.vector3(x, y, 0))
		y = y + ACTION_BUTTON_Y_STEP
	end
end

local function render_build(self, options)
	local x = 300
	local y = -300
	gui.set_enabled(gui.get_node(BUILD_FIELD), true)
	if options.farm ~= nil then
		render_button(self, BUILD_FARM_BUTTON, options.farm)
		gui.set_position(self.active_buttons[options.farm], vmath.vector3(x, y, 0))
		x = x + BUILD_BUTTON_X_STEP
	end
	if options.sawmill ~= nil then
		render_button(self, BUILD_SAWMILL_BUTTON, options.sawmill)
		gui.set_position(self.active_buttons[options.sawmill], vmath.vector3(x, y, 0))
		x = x + BUILD_BUTTON_X_STEP
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.active_buttons = {}
end

function on_message(self, message_id, message, sender)
	if message_id == hash("render") then
		clear_gui(self)
		if message.end_turn ~= nil then
			render_button(self, END_TURN_BUTTON, message.end_turn)
		end
		if message.action ~= nil then
			render_action(self, message.action)
		end
		if message.build ~= nil then
			render_build(self, message.build)
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		for message_id, node in pairs(self.active_buttons) do
			if gui.pick_node(node, action.x, action.y) then
				msg.post("game", message_id)
			end
		end
	end
end
